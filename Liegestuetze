
-- // Script \\ --

if game.PlaceId == 7711635737 then

task.wait(2)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/1nig1htmare1234/SCRIPTS/refs/heads/main/Orion.lua')))()
local Window = OrionLib:MakeWindow({
        Name = "QuantumHub - AutoRob",
        HidePremium = false,
        SaveConfig = false,
        IntroText = "Quantum AutoRob | V2.1 - by nytheron"
})

--  // Tabs \\ --

local AutoRobTab = Window:MakeTab({
    Name = "AutoRob",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

local InfosTab = Window:MakeTab({
    Name = "Infos",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

--// Sections \\ --

local Section1 = AutoRobTab:AddSection({
    Name = "AutoRob",
})
local Section = InfosTab:AddSection({
    Name = 'General'
})

AutoRobTab:AddLabel('Please read "Infos" before starting AutoRob!')
AutoRobTab:AddLabel('Do not enable both AutoRobs!')

InfosTab:AddLabel("If you are on phone dont touch the screen while the script is\nrunning if you do it, it may stop working!")
InfosTab:AddLabel("If you got the problem that it buys much bombs, please dont\nopen a ticket. Im working on it!")
InfosTab:AddLabel("If its stopping then just reexecute then it should working\nagain, it must be an error from your executor!")
local Section = InfosTab:AddSection({
    Name = "Others"
})
InfosTab:AddLabel("If you got any other problems, please open a ticket in the\nDiscord Server:")
InfosTab:AddButton({
	Name = "Copy Discord",
	Callback = function()
		setclipboard("https://discord.gg/https://discord.gg/9mFj4UMJPU")
		OrionLib:MakeNotification({
			Name = "Discord Server",
			Content = "Discord Server link copied to clipboard!",
			Image = "rbxassetid://4483345998",
			Time = 5
		})
	end
})

-- // Autofarm \\ --
local configFileName = "Quantum_config5.json"

local autorobBankClubToggle = false
local autorobContainersToggle = false
local autoSellToggle = false

local function loadConfig()
    if isfile(configFileName) then
        local data = readfile(configFileName)
        local success, config = pcall(function() return game:GetService("HttpService"):JSONDecode(data) end)
        if success and config then
            autorobBankClubToggle = config.autorobBankClubToggle or false
            autorobContainersToggle = config.autorobContainersToggle or false
            autoSellToggle = config.autoSellToggle or false
        end
    end
end

local function saveConfig()
    local config = {
        autorobBankClubToggle = autorobBankClubToggle,
        autorobContainersToggle = autorobContainersToggle,
        autoSellToggle = autoSellToggle
    }
    local json = game:GetService("HttpService"):JSONEncode(config)
    writefile(configFileName, json)
end

loadConfig()

AutoRobTab:AddToggle({
	Name = "AutoRob Bank/Club",
	Default = autorobBankClubToggle,
	Callback = function(Value)
        autorobBankClubToggle = Value
        saveConfig()
	end    
})

AutoRobTab:AddToggle({
	Name = "AutoRob Containers",
	Default = autorobContainersToggle,
	Callback = function(Value)
        autorobContainersToggle = Value
        saveConfig()
	end    
})

AutoRobTab:AddToggle({
	Name = "Auto-Sell",
	Default = autoSellToggle,
	Callback = function(Value)
        autoSellToggle = Value
		saveConfig()
	end    
})

-- Events 
local plr = game:GetService("Players").LocalPlayer
local EquipRemoteEvent = game:GetService("ReplicatedStorage")["Bnl"]["d883ecf6-ecda-4c56-9855-893c1cf13308"]
local buyRemoteEvent = game:GetService("ReplicatedStorage")["Bnl"]["0e9e7359-465e-44b1-82c2-40bd8c2ee546"]
local sellRemoteEvent = game:GetService("ReplicatedStorage")["Bnl"]["2432026b-5c29-477d-b406-c6a1a413923a"]
local VirtualInputManager = game:GetService("VirtualInputManager")

local function SpawnBomb()
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)
    task.wait(0.5)
    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
    task.wait(0.1)
    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
end

local fireBombRemoteEvent = game:GetService("ReplicatedStorage")["Bnl"]["cedfa9a4-6dd7-4735-a22e-db4729f2db81"] 
local robRemoteEvent = game:GetService("ReplicatedStorage")["Bnl"]["fdffc7c3-4c83-4693-8a33-380ed2d60083"]
local ProximityPromptTimeBet = 2.5
local VirtualInputManager = game:GetService("VirtualInputManager")
local key = Enum.KeyCode.E
local TweenService = game:GetService("TweenService")

local function JumpOut()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer    
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid and humanoid.SeatPart then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end

local function ensurePlayerInVehicle()
    local player = game:GetService("Players").LocalPlayer
    local vehicle = workspace:FindFirstChild("Vehicles") and workspace.Vehicles:FindFirstChild(player.Name)
    local character = player.Character or player.CharacterAdded:Wait()

    if vehicle and character then
        local humanoid = character:FindFirstChildWhichIsA("Humanoid")
        local driveSeat = vehicle:FindFirstChild("DriveSeat")

        if humanoid and driveSeat and humanoid.SeatPart ~= driveSeat then
            driveSeat:Sit(humanoid)
        end
    end
end

local function clickAtCoordinates(scaleX, scaleY, duration)
    local camera = game.Workspace.CurrentCamera
    local screenWidth = camera.ViewportSize.X
    local screenHeight = camera.ViewportSize.Y
    local VirtualInputManager = game:GetService("VirtualInputManager")
    local absoluteX = screenWidth * scaleX
    local absoluteY = screenHeight * scaleY
            
    VirtualInputManager:SendMouseButtonEvent(absoluteX, absoluteY, 0, true, game, 0)  
                
    if duration and duration > 0 then
        task.wait(duration)  
    end
                
    VirtualInputManager:SendMouseButtonEvent(absoluteX, absoluteY, 0, false, game, 0) 
end

local function plrTween(destination)
    local plr = game.Players.LocalPlayer
    local char = plr.Character

    if not char or not char.PrimaryPart then
        warn("Character or PrimaryPart not available.")
        return
    end

    local distance = (char.PrimaryPart.Position - destination).Magnitude
    local tweenDuration = distance / 28

    local TweenInfoToUse = TweenInfo.new(
        tweenDuration,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.Out
    )

    local TweenValue = Instance.new("CFrameValue")
    TweenValue.Value = char:GetPivot()

    TweenValue.Changed:Connect(function(newCFrame)
        char:PivotTo(newCFrame)
    end)

    local targetCFrame = CFrame.new(destination)
    local tween = TweenService:Create(TweenValue, TweenInfoToUse, { Value = targetCFrame })

    tween:Play()

    tween.Completed:Wait()
    TweenValue:Destroy()
end

local function interactWithVisibleMeshParts(folder)
    if not folder then return end
    local player = game.Players.LocalPlayer
    local policeTeam = game:GetService("Teams"):FindFirstChild("Police")
    if not policeTeam then return end
    
    local function isPoliceNearby()
        for _, plr in ipairs(game:GetService("Players"):GetPlayers()) do
            if plr.Team == policeTeam and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (plr.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance <= 40 then
                    return true
                end
            end
        end
        return false
    end

    local meshParts = {}

    for _, meshPart in ipairs(folder:GetChildren()) do
        if meshPart:IsA("MeshPart") and meshPart.Transparency == 0 then
            table.insert(meshParts, meshPart)
        end
    end

    table.sort(meshParts, function(a, b)
        local aDist = (a.Position - player.Character.HumanoidRootPart.Position).Magnitude
        local bDist = (b.Position - player.Character.HumanoidRootPart.Position).Magnitude
        return aDist < bDist
    end)

    for _, meshPart in ipairs(meshParts) do
        if isPoliceNearby() then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Police is nearby",
                Text = "Interaction aborted",
            })
            return
        end

        if player.Character.Humanoid.Health <= 47 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Player is hurt",
                Text = "Interaction aborted",
            })
            return
        end

        if meshPart.Transparency == 1 then
            continue
        end

        if meshPart.Parent.Name == "Money" then
            local args = {meshPart, "b23", true}
            robRemoteEvent:FireServer(unpack(args))
            task.wait(ProximityPromptTimeBet)
            args[3] = false
            robRemoteEvent:FireServer(unpack(args))
        else
            local args = {meshPart, "qn9", true}
            robRemoteEvent:FireServer(unpack(args))
            task.wait(ProximityPromptTimeBet)
            args[3] = false
            robRemoteEvent:FireServer(unpack(args))
        end
    end
end

local function interactWithVisibleMeshParts2(folder)
    if not folder then return end
    local player = game.Players.LocalPlayer
    local policeTeam = game:GetService("Teams"):FindFirstChild("Police")
    if not policeTeam then return end

    local function isPoliceNearby()
        for _, plr in ipairs(game:GetService("Players"):GetPlayers()) do
            if plr.Team == policeTeam and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (plr.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance <= 40 then
                    return true
                end
            end
        end
        return false
    end

    local meshParts = {}
    for _, meshPart in ipairs(folder:GetChildren()) do
        if meshPart:IsA("MeshPart") and meshPart.Transparency == 0 then
            table.insert(meshParts, meshPart)
        end
    end

    table.sort(meshParts, function(a, b)
        local aDist = (a.Position - player.Character.HumanoidRootPart.Position).Magnitude
        local bDist = (b.Position - player.Character.HumanoidRootPart.Position).Magnitude
        return aDist < bDist
    end)

    for i, meshPart in ipairs(meshParts) do
        if isPoliceNearby() then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Police is nearby",
                Text = "Interaction aborted",
            })
            return
        end

        if player.Character.Humanoid.Health <= 47 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Player is hurt",
                Text = "Interaction aborted",
            })
            return
        end

        if meshPart.Transparency == 1 then
            return
        end

        plrTween(meshPart.Position)
        if meshPart.Parent.Name == "Money" then
            local args3 = {
                [1] = meshPart,
                [2] = "b23",
                [3] = true,
            }

            robRemoteEvent:FireServer(unpack(args3))
            task.wait(ProximityPromptTimeBet)
            local args3 = {
                [1] = meshPart,
                [2] = "b23",
                [3] = false,
            }

            robRemoteEvent:FireServer(unpack(args3))
        else
            local args4 = {
                [1] = meshPart,
                [2] = "qn9",
                [3] = true
            }

            robRemoteEvent:FireServer(unpack(args4))
            task.wait(ProximityPromptTimeBet)
            local args4 = {
                [1] = meshPart,
                [2] = "qn9",
                [3] = false
            }

            robRemoteEvent:FireServer(unpack(args4))
        end

        task.wait(0.1)
    end
end

local function tweenTo(destination)
    local plr = game.Players.LocalPlayer
    local car = Workspace.Vehicles[plr.Name]
    car:SetAttribute("ParkingBrake", true)
    car:SetAttribute("Locked", true)
    car.PrimaryPart = car:FindFirstChild("DriveSeat",true)
    car.DriveSeat:Sit(plr.Character.Humanoid)

    local distance = (car.PrimaryPart.Position - destination).Magnitude
    local tweenDuration = distance / 175

    local TweenInfoToUse = TweenInfo.new(
        tweenDuration,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.Out
    )

    local TweenValue = Instance.new("CFrameValue")
    TweenValue.Value = car:GetPivot()

    TweenValue.Changed:Connect(function(newCFrame)
        car:PivotTo(newCFrame)
        car.DriveSeat.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
        car.DriveSeat.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
    end)

    local targetCFrame = CFrame.new(destination)
    local tween = TweenService:Create(TweenValue, TweenInfoToUse, { Value = targetCFrame })

    tween:Play()

    tween.Completed:Wait()
    car:SetAttribute("ParkingBrake", true)
    car:SetAttribute("Locked", true)
    TweenValue:Destroy()
    return
end

local HttpService = game:GetService('HttpService')
local TeleportService = game:GetService('TeleportService')
local Players = game:GetService("Players")
local PlaceID = game.PlaceId 
local AllIDs = {}
local foundAnything = ""
local actualHour = os.time()

local success, result = pcall(function()
    return HttpService:JSONDecode(readfile("NotSameServersQuantumAutoRob.json"))
end)

if success and type(result) == "table" then
    AllIDs = result
else
    AllIDs = {actualHour}
    writefile("NotSameServersQuantumAutoRob.json", HttpService:JSONEncode(AllIDs))
end

local function TPReturner()
    local Site
    if foundAnything == "" then
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end

    if Site.nextPageCursor then
        foundAnything = Site.nextPageCursor
    end

    for _, v in pairs(Site.data) do
        if tonumber(v.playing) < tonumber(v.maxPlayers) then
            local ServerID = tostring(v.id)
            local AlreadyVisited = false

            for _, ExistingID in ipairs(AllIDs) do
                if ServerID == ExistingID then
                    AlreadyVisited = true
                    break
                end
            end

            if not AlreadyVisited then
                table.insert(AllIDs, ServerID)
                writefile("NotSameServersQuantumAutoRob.json", HttpService:JSONEncode(AllIDs))
                TeleportService:TeleportToPlaceInstance(PlaceID, ServerID, Players.LocalPlayer)
                wait(4)
                return
            end
        end
    end
end

local function ServerHop()
    pcall(function()
        TPReturner()
        if foundAnything ~= "" then
            TPReturner()
        end
    end)
end

local payload = [[
    loadstring(game:HttpGet("https://raw.githubusercontent.com/KrockiDerSigma/Krocki/refs/heads/main/Liegestuetze"))()
]]

local q = queue_on_teleport or (syn and syn.queue_on_teleport)
if q then
    q(payload)
else
    warn("Executor unterstützt kein queue_on_teleport")
end

local function MoveToDealer()
    local player = game:GetService("Players").LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local vehicle = workspace.Vehicles:FindFirstChild(player.Name)
    if not vehicle then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Error",
            Text = "No vehicle found.",
            Duration = 3,
        })
        
        return
    end

    local dealers = workspace:FindFirstChild("Dealers")
    if not dealers then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Error",
            Text = "Dealers not found.",
            Duration = 3,
        })
        tweenTo(Vector3.new(-1326.9339599609375, 5.396645545959473, 3490.296142578125))
        tweenTo(Vector3.new(-211.53904724121094, 5.416522979736328, 3499.19287109375))
        tweenTo(Vector3.new(188.1317901611328, 37.26602554321289, 3893.039306640625))
        ServerHop()
        return
    end

    local closest, shortest = nil, math.huge
    for _, dealer in pairs(dealers:GetChildren()) do
        if dealer:FindFirstChild("Head") then
            local dist = (character.HumanoidRootPart.Position - dealer.Head.Position).Magnitude
            if dist < shortest then
                shortest = dist
                closest = dealer.Head
            end
        end
    end

    if not closest then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Error",
            Text = "No dealer found.",
            Duration = 3,
        })
        tweenTo(Vector3.new(1656.3526611328125, -25.936052322387695, 2821.137451171875))
        ServerHop()
        return
    end

    local destination1 = closest.Position + Vector3.new(0, 5, 0)
    tweenTo(destination1)
end

local function robBankAndClub()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local camera = game.Workspace.CurrentCamera

    local function lockCamera()
        local rootPart = character.HumanoidRootPart
        local backOffset = rootPart.CFrame.LookVector * -6
        local cameraPosition = rootPart.Position + backOffset + Vector3.new(0, 5, 0) 
        local lookAtPosition = rootPart.Position + Vector3.new(0, 2, 0) 
        camera.CFrame = CFrame.new(cameraPosition, lookAtPosition)
    end

    game:GetService("RunService").Heartbeat:Connect(lockCamera)
    
    local musikPos = Vector3.new(-1739.5330810546875, 11, 3052.31103515625)
    local musikStand = Vector3.new(-1744.177001953125, 11.125, 3012.20263671875)
    local musikSafe = Vector3.new(-1743.4300537109375, 11.124999046325684, 3049.96630859375)
    
    ensurePlayerInVehicle()
    task.wait(.5)
    clickAtCoordinates(0.5, 0.9)
    task.wait(.5)
    tweenTo(Vector3.new(-1370.972412109375, 5.499999046325684, 3127.154541015625))
    
    local musikPart = workspace.Robberies["Club Robbery"].Club.Door.Accessory.Black
    local bankPart = Workspace.Robberies.BankRobbery.VaultDoor["Meshes/Tresor_Plane (2)"]
    local bankLight = game.Workspace.Robberies.BankRobbery.LightGreen.Light
    local bankLight2 = game.Workspace.Robberies.BankRobbery.LightRed.Light
    
        -- Club Robbery
    if musikPart.Rotation == Vector3.new(180, 0, 180) then
        clickAtCoordinates(0.5, 0.9)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Safe is open",
            Text = "Going to rob",
        })
        
        -- Bomben-Check
        local hasBomb = plr.Character:FindFirstChild("Bomb") or plr.Backpack:FindFirstChild("Bomb")
        if not hasBomb then
            ensurePlayerInVehicle()
            MoveToDealer()
            task.wait(0.5)
            args = {[1] = "Bomb", [2] = "Dealer"}
            buyRemoteEvent:FireServer(unpack(args))
            task.wait(0.5)
        end

        -- 1. Zum Club fahren
        ensurePlayerInVehicle()
        tweenTo(musikPos)
        task.wait(0.5)
        JumpOut()
        task.wait(0.5)

        -- 2. Zur Bombenposition gehen (sicherer Abstand)
        plrTween(Vector3.new(-1744.177001953125, 11.125, 3017.20263671875))
        task.wait(0.5)

        -- 3. Bombe platzieren
        args = {[1] = "Bomb"}
        EquipRemoteEvent:FireServer(unpack(args))
        task.wait(0.5)
        
        local tool = plr.Character:FindFirstChild("Bomb")
        if tool then
        SpawnBomb()
    else
        warn("Tool 'Bomb' not found in the Backpack!")
end

    task.wait(0.5)
    fireBombRemoteEvent:FireServer()

    plrTween(musikSafe)
    task.wait(1.8)
    plrTween(musikStand)

    safeFolder = workspace.Robberies["Club Robbery"].Club
    interactWithVisibleMeshParts(safeFolder:FindFirstChild("Items"))
    interactWithVisibleMeshParts(safeFolder:FindFirstChild("Money"))
    task.wait(0.5)

    ensurePlayerInVehicle()

    if autoSellToggle == true then
    ensurePlayerInVehicle()
    MoveToDealer()
    task.wait(0.5)

    args = {
        [1] = "Gold",
        [2] = "Dealer"
    }
    sellRemoteEvent:FireServer(unpack(args))
    sellRemoteEvent:FireServer(unpack(args))
    sellRemoteEvent:FireServer(unpack(args))

    tweenTo(Vector3.new(-1370.972412109375, 5.499999046325684, 3127.154541015625))
end

    ensurePlayerInVehicle()
    tweenTo(Vector3.new(-1370.972412109375, 5.499999046325684, 3127.154541015625))

    else
        game.StarterGui:SetCore("SendNotification", {
        Title = "Safe is not open",
        Text = "Going to Bank",
        })
    end

        if autoSellToggle == true then
            ensurePlayerInVehicle()
            MoveToDealer()
            task.wait(0.5)

            args = {
                [1] = "Gold",
                [2] = "Dealer"
            }
            sellRemoteEvent:FireServer(unpack(args))
            sellRemoteEvent:FireServer(unpack(args))
            sellRemoteEvent:FireServer(unpack(args))

            tweenTo(Vector3.new(-1370.972412109375, 5.499999046325684, 3127.154541015625))

        ensurePlayerInVehicle()
        tweenTo(Vector3.new(-1370.972412109375, 5.499999046325684, 3127.154541015625))
    else
        game.StarterGui:SetCore("SendNotification", {
            Title = "Safe is not open",
            Text = "Going to Bank",
        })
end


    -- Bank Robbery
    if bankLight2.Enabled == false and bankLight.Enabled == true then
        clickAtCoordinates(0.5, 0.9)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Bank is open",
            Text = "Going to rob",
        })

        ensurePlayerInVehicle()
        local hasBomb1 = false
        
        local function checkContainer(container)
            for _, item in ipairs(container:GetChildren()) do
                if item:IsA("Tool") and item.Name == "Bomb" then
                    return true
                end
            end
            return false
        end

        hasBomb1 = checkContainer(plr.Backpack) or checkContainer(plr.Character)
        if not hasBomb1 then
            ensurePlayerInVehicle()
            task.wait(0.5)
            MoveToDealer()
            task.wait(0.5)
            MoveToDealer()
            task.wait(0.5)
            args = {
                [1] = "Bomb",
                [2] = "Dealer"
            }
            buyRemoteEvent:FireServer(unpack(args))
            task.wait(0.5)
        end
        
        tweenTo(Vector3.new(-1202.86181640625, 7.877995491027832, 3164.614501953125))
        tweenTo(Vector3.new(-1202.86181640625, 7.877995491027832, 3164.614501953125))
        JumpOut()
        task.wait(.5)
        plrTween(Vector3.new(-1242.367919921875, 7.749999046325684, 3144.705322265625))
        task.wait(.5)
        args = {
            [1] = "Bomb"
        }
        EquipRemoteEvent:FireServer(unpack(args))
        task.wait(.5)
        
        tool = plr.Character:FindFirstChild("Bomb")
        if tool then
            SpawnBomb()
        else
            warn("Tool 'Bomb' not found in the Backpack!")
        end

        task.wait(0.5)
        fireBombRemoteEvent:FireServer()
        plrTween(Vector3.new(-1246.291015625, 7.749999046325684, 3120.8505859375))
        task.wait(2.5)
        safeFolder = Workspace.Robberies.BankRobbery
        interactWithVisibleMeshParts2(safeFolder:FindFirstChild("Gold"))
        interactWithVisibleMeshParts2(safeFolder:FindFirstChild("Gold"))
        interactWithVisibleMeshParts2(safeFolder:FindFirstChild("Money"))
        interactWithVisibleMeshParts2(safeFolder:FindFirstChild("Money"))
        ensurePlayerInVehicle()
        tweenTo(Vector3.new(-1326.9339599609375, 5.396645545959473, 3490.296142578125))
        tweenTo(Vector3.new(-211.53904724121094, 5.416522979736328, 3499.19287109375))
        tweenTo(Vector3.new(188.1317901611328, 37.26602554321289, 3893.039306640625))
        ServerHop()
    
        
        if autoSellToggle == true then
            task.wait(.5)
            MoveToDealer()
            task.wait(.5)
            MoveToDealer()
            task.wait(.5)
            args = {
                [1] = "Gold",
                [2] = "Dealer"
            }
            sellRemoteEvent:FireServer(unpack(args))
            sellRemoteEvent:FireServer(unpack(args))
            sellRemoteEvent:FireServer(unpack(args))
            task.wait(.5)
        end
    else
        game.StarterGui:SetCore("SendNotification", {
            Title = "Bank is not open",
            Text = "Hopping Server :^)",
        })
        ensurePlayerInVehicle()
        tweenTo(Vector3.new(-1326.9339599609375, 5.396645545959473, 3490.296142578125))
        tweenTo(Vector3.new(-211.53904724121094, 5.416522979736328, 3499.19287109375))
        tweenTo(Vector3.new(188.1317901611328, 37.26602554321289, 3893.039306640625))
        ServerHop()
    
    end
end

local function robContainers()
    tweenTo(Vector3.new(1058.7470703125, 5.733738899230957, 2218.6943359375))
    task.wait(.5)
    
    local containerFolder = workspace.Robberies.ContainerRobberies
    local containers = {}
    
    local function getContainerRobberies(folder)
        local result = {}
        for _, model in ipairs(folder:GetChildren()) do
            if model.Name == "ContainerRobbery" then
                table.insert(result, model)
            end
        end
        return result
    end

    containers = getContainerRobberies(containerFolder) 

    container1 = containers[1]
    container2 = containers[2]
    con1Planks = container1:FindFirstChild("WoodPlanks", true)
    con2Planks = container2:FindFirstChild("WoodPlanks", true)
                
    function isPoliceNearby()
        local policeTeam = game:GetService("Teams"):FindFirstChild("Police")
        for _, plr in ipairs(game:GetService("Players"):GetPlayers()) do
            if plr.Team == policeTeam and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (plr.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance <= 40 then
                    return true
                end
            end
        end
        return false
    end

    -- Container 1
    if con1Planks.Transparency == 1 then
        ensurePlayerInVehicle()
        task.wait(.5)
        MoveToDealer()
        task.wait(.5)
        args = {
            [1] = "Bomb",
            [2] = "Dealer"
        }
        buyRemoteEvent:FireServer(unpack(args))
        task.wait(0.5)
        tweenTo(con1Planks.Position)
        tweenTo(con1Planks.Position)
        task.wait(0.5)
        JumpOut()
        task.wait(0.5)
        plrTween(con1Planks.Position)
        task.wait(0.5)
        args = {
            [1] = "Bomb"
        }
        EquipRemoteEvent:FireServer(unpack(args))
        task.wait(0.5)
        
        tool = plr.Character:FindFirstChild("Bomb")
        if tool then
            SpawnBomb()
        else
            warn("Tool 'Bomb' not found in the Backpack!")
        end

        task.wait(.5)
        fireBombRemoteEvent:FireServer()
        ensurePlayerInVehicle()
        tweenTo(Vector3.new(1096.401, 57.31, 2226.765), Vector3.new(1096.401, 57.31, 2241.98))
        task.wait(2)
        tweenTo(con1Planks.Position)
        JumpOut()
        task.wait(.5)
        plrTween(con1Planks.Position)
        interactWithVisibleMeshParts2(container1:FindFirstChild("Items"))
        interactWithVisibleMeshParts2(container1:FindFirstChild("Items"))
        interactWithVisibleMeshParts2(container1:FindFirstChild("Money"))
        interactWithVisibleMeshParts2(container1:FindFirstChild("Money"))
        task.wait(.2)
        ensurePlayerInVehicle()
        task.wait(.2)
        tweenTo(Vector3.new(1096.401, 57.31, 2226.765), Vector3.new(1096.401, 57.31, 2241.98))
    else
        game.StarterGui:SetCore("SendNotification", {
            Title = "Container1 not open",
            Text = "Going to Container2",
        })
    end

    -- Container 2
    if con2Planks.Transparency == 1 then
        ensurePlayerInVehicle()
        task.wait(.5)
        MoveToDealer()
        task.wait(.5)
        args = {
            [1] = "Bomb",
            [2] = "Dealer"
        }
        buyRemoteEvent:FireServer(unpack(args))
        task.wait(0.5)
        tweenTo(con2Planks.Position)
        task.wait(0.5)
        JumpOut()
        task.wait(.5)
        plrTween(con2Planks.Position)
        task.wait(0.5)
        args = {
            [1] = "Bomb"
        }
        EquipRemoteEvent:FireServer(unpack(args))
        task.wait(0.5)
        
        tool = plr.Character:FindFirstChild("Bomb")
        if tool then
            SpawnBomb()
        else
            warn("Tool 'Bomb' not found in the Backpack!")
        end

        task.wait(.5)
        fireBombRemoteEvent:FireServer()
        ensurePlayerInVehicle()
        tweenTo(Vector3.new(1096.401, 57.31, 2226.765), Vector3.new(1096.401, 57.31, 2241.98))
        task.wait(2)
        tweenTo(con2Planks.Position)
        JumpOut()
        task.wait(.5)
        plrTween(con2Planks.Position)
        interactWithVisibleMeshParts2(container2:FindFirstChild("Items"))
        interactWithVisibleMeshParts2(container2:FindFirstChild("Items"))
        interactWithVisibleMeshParts2(container2:FindFirstChild("Money"))
        interactWithVisibleMeshParts2(container2:FindFirstChild("Money"))
        task.wait(.5)
        ensurePlayerInVehicle()
        tweenTo(Vector3.new(1656.3526611328125, -25.936052322387695, 2821.137451171875))
        ServerHop()
    else
        game.StarterGui:SetCore("SendNotification", {
            Title = "Container2 not open",
            Text = "Hopping Server :^)",
        })
    end

    ensurePlayerInVehicle()
    tweenTo(Vector3.new(1656.3526611328125, -25.936052322387695, 2821.137451171875))
    ServerHop()
end

while task.wait() do
    if autorobBankClubToggle == true then
        robBankAndClub()
    end
    
    if autorobContainersToggle == true then
        robContainers()
    end
end

OrionLib:Init()
end
